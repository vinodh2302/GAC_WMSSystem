// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WMSSystems.Models;

#nullable disable

namespace WMSSystems.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250806141307_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WMSSystems.Models.Customer", b =>
                {
                    b.Property<string>("customerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("customerAddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerAddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerAddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerAddressState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerAddressZip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WMSSystems.Models.Product", b =>
                {
                    b.Property<string>("productCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("productDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productHeight")
                        .HasColumnType("int");

                    b.Property<int>("productLength")
                        .HasColumnType("int");

                    b.Property<string>("productTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productWidth")
                        .HasColumnType("int");

                    b.HasKey("productCode");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WMSSystems.Models.PurchaseOrderProduct", b =>
                {
                    b.Property<string>("orderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PurchaseOrdersorderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("productCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("orderId");

                    b.HasIndex("PurchaseOrdersorderId");

                    b.HasIndex("productCode");

                    b.ToTable("PurchaseOrderProduct");
                });

            modelBuilder.Entity("WMSSystems.Models.PurchaseOrders", b =>
                {
                    b.Property<string>("orderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("customerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("processingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("orderId");

                    b.HasIndex("customerId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("WMSSystems.Models.PurchaseOrderProduct", b =>
                {
                    b.HasOne("WMSSystems.Models.PurchaseOrders", null)
                        .WithMany("productLength")
                        .HasForeignKey("PurchaseOrdersorderId");

                    b.HasOne("WMSSystems.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("productCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("WMSSystems.Models.PurchaseOrders", b =>
                {
                    b.HasOne("WMSSystems.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("WMSSystems.Models.PurchaseOrders", b =>
                {
                    b.Navigation("productLength");
                });
#pragma warning restore 612, 618
        }
    }
}
